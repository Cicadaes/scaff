<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.surfilter.ps.mapper.RConditionMapper">
  <resultMap id="BaseResultMap" type="com.surfilter.ps.model.RCondition">
    <id column="ID_CONDITION" jdbcType="BIGINT" property="idCondition" />
    <result column="ID_CONDITION_PARENT" jdbcType="INTEGER" property="idConditionParent" />
    <result column="NEGATED" jdbcType="BIT" property="negated" />
    <result column="OPERATOR" jdbcType="VARCHAR" property="operator" />
    <result column="LEFT_NAME" jdbcType="VARCHAR" property="leftName" />
    <result column="CONDITION_FUNCTION" jdbcType="VARCHAR" property="conditionFunction" />
    <result column="RIGHT_NAME" jdbcType="VARCHAR" property="rightName" />
    <result column="ID_VALUE_RIGHT" jdbcType="INTEGER" property="idValueRight" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID_CONDITION, ID_CONDITION_PARENT, NEGATED, OPERATOR, LEFT_NAME, CONDITION_FUNCTION, 
    RIGHT_NAME, ID_VALUE_RIGHT
  </sql>
  <select id="selectByExample" parameterType="com.surfilter.ps.model.RConditionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from r_condition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from r_condition
    where ID_CONDITION = #{idCondition,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from r_condition
    where ID_CONDITION = #{idCondition,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.surfilter.ps.model.RConditionExample">
    delete from r_condition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.surfilter.ps.model.RCondition">
    insert into r_condition (ID_CONDITION, ID_CONDITION_PARENT, NEGATED, 
      OPERATOR, LEFT_NAME, CONDITION_FUNCTION, 
      RIGHT_NAME, ID_VALUE_RIGHT)
    values (#{idCondition,jdbcType=BIGINT}, #{idConditionParent,jdbcType=INTEGER}, #{negated,jdbcType=BIT}, 
      #{operator,jdbcType=VARCHAR}, #{leftName,jdbcType=VARCHAR}, #{conditionFunction,jdbcType=VARCHAR}, 
      #{rightName,jdbcType=VARCHAR}, #{idValueRight,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.surfilter.ps.model.RCondition">
    insert into r_condition
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idCondition != null">
        ID_CONDITION,
      </if>
      <if test="idConditionParent != null">
        ID_CONDITION_PARENT,
      </if>
      <if test="negated != null">
        NEGATED,
      </if>
      <if test="operator != null">
        OPERATOR,
      </if>
      <if test="leftName != null">
        LEFT_NAME,
      </if>
      <if test="conditionFunction != null">
        CONDITION_FUNCTION,
      </if>
      <if test="rightName != null">
        RIGHT_NAME,
      </if>
      <if test="idValueRight != null">
        ID_VALUE_RIGHT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idCondition != null">
        #{idCondition,jdbcType=BIGINT},
      </if>
      <if test="idConditionParent != null">
        #{idConditionParent,jdbcType=INTEGER},
      </if>
      <if test="negated != null">
        #{negated,jdbcType=BIT},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="leftName != null">
        #{leftName,jdbcType=VARCHAR},
      </if>
      <if test="conditionFunction != null">
        #{conditionFunction,jdbcType=VARCHAR},
      </if>
      <if test="rightName != null">
        #{rightName,jdbcType=VARCHAR},
      </if>
      <if test="idValueRight != null">
        #{idValueRight,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.surfilter.ps.model.RConditionExample" resultType="java.lang.Long">
    select count(*) from r_condition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update r_condition
    <set>
      <if test="record.idCondition != null">
        ID_CONDITION = #{record.idCondition,jdbcType=BIGINT},
      </if>
      <if test="record.idConditionParent != null">
        ID_CONDITION_PARENT = #{record.idConditionParent,jdbcType=INTEGER},
      </if>
      <if test="record.negated != null">
        NEGATED = #{record.negated,jdbcType=BIT},
      </if>
      <if test="record.operator != null">
        OPERATOR = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.leftName != null">
        LEFT_NAME = #{record.leftName,jdbcType=VARCHAR},
      </if>
      <if test="record.conditionFunction != null">
        CONDITION_FUNCTION = #{record.conditionFunction,jdbcType=VARCHAR},
      </if>
      <if test="record.rightName != null">
        RIGHT_NAME = #{record.rightName,jdbcType=VARCHAR},
      </if>
      <if test="record.idValueRight != null">
        ID_VALUE_RIGHT = #{record.idValueRight,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update r_condition
    set ID_CONDITION = #{record.idCondition,jdbcType=BIGINT},
      ID_CONDITION_PARENT = #{record.idConditionParent,jdbcType=INTEGER},
      NEGATED = #{record.negated,jdbcType=BIT},
      OPERATOR = #{record.operator,jdbcType=VARCHAR},
      LEFT_NAME = #{record.leftName,jdbcType=VARCHAR},
      CONDITION_FUNCTION = #{record.conditionFunction,jdbcType=VARCHAR},
      RIGHT_NAME = #{record.rightName,jdbcType=VARCHAR},
      ID_VALUE_RIGHT = #{record.idValueRight,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.surfilter.ps.model.RCondition">
    update r_condition
    <set>
      <if test="idConditionParent != null">
        ID_CONDITION_PARENT = #{idConditionParent,jdbcType=INTEGER},
      </if>
      <if test="negated != null">
        NEGATED = #{negated,jdbcType=BIT},
      </if>
      <if test="operator != null">
        OPERATOR = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="leftName != null">
        LEFT_NAME = #{leftName,jdbcType=VARCHAR},
      </if>
      <if test="conditionFunction != null">
        CONDITION_FUNCTION = #{conditionFunction,jdbcType=VARCHAR},
      </if>
      <if test="rightName != null">
        RIGHT_NAME = #{rightName,jdbcType=VARCHAR},
      </if>
      <if test="idValueRight != null">
        ID_VALUE_RIGHT = #{idValueRight,jdbcType=INTEGER},
      </if>
    </set>
    where ID_CONDITION = #{idCondition,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.surfilter.ps.model.RCondition">
    update r_condition
    set ID_CONDITION_PARENT = #{idConditionParent,jdbcType=INTEGER},
      NEGATED = #{negated,jdbcType=BIT},
      OPERATOR = #{operator,jdbcType=VARCHAR},
      LEFT_NAME = #{leftName,jdbcType=VARCHAR},
      CONDITION_FUNCTION = #{conditionFunction,jdbcType=VARCHAR},
      RIGHT_NAME = #{rightName,jdbcType=VARCHAR},
      ID_VALUE_RIGHT = #{idValueRight,jdbcType=INTEGER}
    where ID_CONDITION = #{idCondition,jdbcType=BIGINT}
  </update>
</mapper>