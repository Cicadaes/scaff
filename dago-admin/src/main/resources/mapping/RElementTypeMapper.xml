<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.surfilter.ps.mapper.RElementTypeMapper">
  <resultMap id="BaseResultMap" type="com.surfilter.ps.model.RElementType">
    <id column="ID_ELEMENT_TYPE" jdbcType="BIGINT" property="idElementType" />
    <result column="ID_NAMESPACE" jdbcType="INTEGER" property="idNamespace" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.surfilter.ps.model.RElementTypeWithBLOBs">
    <result column="NAME" jdbcType="LONGVARCHAR" property="name" />
    <result column="DESCRIPTION" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID_ELEMENT_TYPE, ID_NAMESPACE
  </sql>
  <sql id="Blob_Column_List">
    NAME, DESCRIPTION
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.surfilter.ps.model.RElementTypeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from r_element_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.surfilter.ps.model.RElementTypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from r_element_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from r_element_type
    where ID_ELEMENT_TYPE = #{idElementType,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from r_element_type
    where ID_ELEMENT_TYPE = #{idElementType,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.surfilter.ps.model.RElementTypeExample">
    delete from r_element_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.surfilter.ps.model.RElementTypeWithBLOBs">
    insert into r_element_type (ID_ELEMENT_TYPE, ID_NAMESPACE, NAME, 
      DESCRIPTION)
    values (#{idElementType,jdbcType=BIGINT}, #{idNamespace,jdbcType=INTEGER}, #{name,jdbcType=LONGVARCHAR}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.surfilter.ps.model.RElementTypeWithBLOBs">
    insert into r_element_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idElementType != null">
        ID_ELEMENT_TYPE,
      </if>
      <if test="idNamespace != null">
        ID_NAMESPACE,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idElementType != null">
        #{idElementType,jdbcType=BIGINT},
      </if>
      <if test="idNamespace != null">
        #{idNamespace,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.surfilter.ps.model.RElementTypeExample" resultType="java.lang.Long">
    select count(*) from r_element_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update r_element_type
    <set>
      <if test="record.idElementType != null">
        ID_ELEMENT_TYPE = #{record.idElementType,jdbcType=BIGINT},
      </if>
      <if test="record.idNamespace != null">
        ID_NAMESPACE = #{record.idNamespace,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.description != null">
        DESCRIPTION = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update r_element_type
    set ID_ELEMENT_TYPE = #{record.idElementType,jdbcType=BIGINT},
      ID_NAMESPACE = #{record.idNamespace,jdbcType=INTEGER},
      NAME = #{record.name,jdbcType=LONGVARCHAR},
      DESCRIPTION = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update r_element_type
    set ID_ELEMENT_TYPE = #{record.idElementType,jdbcType=BIGINT},
      ID_NAMESPACE = #{record.idNamespace,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.surfilter.ps.model.RElementTypeWithBLOBs">
    update r_element_type
    <set>
      <if test="idNamespace != null">
        ID_NAMESPACE = #{idNamespace,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        DESCRIPTION = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID_ELEMENT_TYPE = #{idElementType,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.surfilter.ps.model.RElementTypeWithBLOBs">
    update r_element_type
    set ID_NAMESPACE = #{idNamespace,jdbcType=INTEGER},
      NAME = #{name,jdbcType=LONGVARCHAR},
      DESCRIPTION = #{description,jdbcType=LONGVARCHAR}
    where ID_ELEMENT_TYPE = #{idElementType,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.surfilter.ps.model.RElementType">
    update r_element_type
    set ID_NAMESPACE = #{idNamespace,jdbcType=INTEGER}
    where ID_ELEMENT_TYPE = #{idElementType,jdbcType=BIGINT}
  </update>
</mapper>